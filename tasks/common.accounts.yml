---

- name: Monoo Config | Install PyMongo package
  yum:
    name: python3-pymongo
    state: present
  when: not mongodb_pymongo_from_pip

- name: Mongo Config | Install PIP
  yum:
    name:
      - python3-devel
      - python3-pip
  when: mongodb_pymongo_from_pip | bool

- name: Mongo Config | Install PyMongo from PIP
  pip:
    name: pymongo
    state: "{{ mongodb_pymongo_pip_version is defined | ternary('present', 'latest') }}"
    version: "{{ mongodb_pymongo_pip_version | default(omit) }}"
  when: mongodb_pymongo_from_pip | bool

- name: Flush all handlers at this point
  meta: flush_handlers

- name: Mongo RBAC | create root user "{{ mongodb_root_account}}"
  mongodb_user:
    database: admin
    name: "{{ item.name }}"
    password: "{{ item.password }}"
    #update_password: "{{ mongodb_user_update_password }}"
    roles: "{{ item.roles }}"
    login_port: "{{ mongodb_conf_port }}"
  with_items:
    - {
      name: "{{ mongodb_root_account }}",
      password: "{{ mongodb_root_password }}",
      roles: "root"
      }
  no_log: true

- name: Mongo RBAC | Create administrative user "{{ mongodb_admin_account }}"
  mongodb_user:
    database: admin
    name: "{{ item.name }}"
    password: "{{ item.password }}"
    #update_password: "{{ mongodb_user_update_password }}"
    roles: "{{ item.roles }}"
    login_port: "{{ mongodb_conf_port }}"
  with_items:
    - {
      name: "{{ mongodb_admin_account}}",
      password: "{{ mongodb_admin_password }}",
      roles: "userAdminAnyDatabase"
      }
  no_log: true

- name: Mongo RBAC | Create backup user "{{ mongodb_backup_account }}"
  mongodb_user:
    database: admin
    name: "{{ item.name }}"
    password: "{{ item.password }}"
    #update_password: "{{ mongodb_user_update_password }}"
    roles: "{{ item.roles }}"
    login_port: "{{ mongodb_conf_port }}"
  with_items:
    - {
      name: "{{ mongodb_backup_account }}",
      password: "{{ mongodb_backup_password }}",
      roles: "backup,clusterMonitor"
      }
  no_log: true